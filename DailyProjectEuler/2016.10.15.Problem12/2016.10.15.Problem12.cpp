// 2016.10.15.Problem12.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include <iostream>


//	The sequence of triangle numbers is generated by adding the natural numbers.So the 7th triangle number would be 
//	1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be :
//
//	1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
//
//	Let us list the factors of the first seven triangle numbers :
//
//	1 : 1
//	3 : 1, 3
//	6 : 1, 2, 3, 6
//	10 : 1, 2, 5, 10
//	15 : 1, 3, 5, 15
//	21 : 1, 3, 7, 21
//	28 : 1, 2, 4, 7, 14, 28
//	We can see that 28 is the first triangle number to have over five divisors.
//
//	What is the value of the first triangle number to have over five hundred divisors ?


int getNumberOfDivisors(long long int number)
{
	int numDivisors = 0;
	long long sqareRoot = sqrt(number);
	for (int i = 1; i < sqareRoot; i++)
	{
		if (number % i == 0)
		{
			//Divisors come in pairs of two
			numDivisors = numDivisors + 2;
		}
	}

	if (sqareRoot * sqareRoot == number)
	{
		numDivisors = numDivisors + 1;
	}

	return numDivisors;
}

long long getAnswer()
{
	long long currentTriangleNumber = 0;
	long long maxIterations = LLONG_MAX >> 1;
	for (long long i = 1; i < maxIterations; i++)
	{
		currentTriangleNumber = currentTriangleNumber + i;
		int numDivisors = getNumberOfDivisors(currentTriangleNumber);
		if (numDivisors > 500)
		{
			return currentTriangleNumber;
		}
	}
}

int main()
{
	long long int result = getAnswer();

	std::cout << result << "\n";

	//Don't close the window
	std::cin >> result;;

	return 0;
}

